/* PullRequestCard.module.css */

/* Main card container */
.card {
  background-color: white;
  border-radius: 0.5rem;
  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  border: 1px solid rgb(229 231 235);
  padding: 1.5rem;
  transition: box-shadow 0.15s ease-in-out;
}

.card:hover {
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
    0 2px 4px -1px rgba(0, 0, 0, 0.06);
}

/* Header section */
.headerSection {
  display: flex;
  align-items: flex-start;
  justify-content: space-between;
}

.contentContainer {
  flex: 1;
}

/* Title section */
.titleSection {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-bottom: 0.5rem;
}

.prIcon {
  width: 1rem;
  height: 1rem;
  color: rgb(107 114 128);
}

.title {
  font-size: 1.125rem;
  font-weight: 600;
  color: rgb(17 24 39);
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

/* State indicators */
.stateOpen {
  display: inline-flex;
  align-items: center;
  gap: 0.25rem;
  padding: 0.125rem 0.5rem;
  border-radius: 9999px;
  font-size: 0.75rem;
  font-weight: 500;
  background-color: rgb(34 197 94);
  color: white;
}

.stateClosed {
  display: inline-flex;
  align-items: center;
  gap: 0.25rem;
  padding: 0.125rem 0.5rem;
  border-radius: 9999px;
  font-size: 0.75rem;
  font-weight: 500;
  background-color: rgb(239 68 68);
  color: white;
}

.stateMerged {
  display: inline-flex;
  align-items: center;
  gap: 0.25rem;
  padding: 0.125rem 0.5rem;
  border-radius: 9999px;
  font-size: 0.75rem;
  font-weight: 500;
  background-color: rgb(59 130 246);
  color: white;
}

.stateDefault {
  display: inline-flex;
  align-items: center;
  gap: 0.25rem;
  padding: 0.125rem 0.5rem;
  border-radius: 9999px;
  font-size: 0.75rem;
  font-weight: 500;
  background-color: rgb(245 158 11);
  color: white;
}

/* Metadata section */
.metadataSection {
  display: flex;
  align-items: center;
  gap: 1rem;
  font-size: 0.875rem;
  color: rgb(75 85 99);
  margin-bottom: 0.75rem;
}

.metadataItem {
  display: flex;
  align-items: center;
  gap: 0.25rem;
}

.metadataIcon {
  width: 0.75rem;
  height: 0.75rem;
}

/* Branch section */
.branchSection {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-bottom: 0.75rem;
}

.branchIcon {
  width: 0.75rem;
  height: 0.75rem;
  color: rgb(107 114 128);
}

.branchText {
  font-size: 0.875rem;
}

.branchCode {
  background-color: rgb(243 244 246);
  padding: 0 0.25rem;
  border-radius: 0.25rem;
}

.branchArrow {
  margin: 0 0.5rem;
}

/* Body text */
.bodyText {
  font-size: 0.875rem;
  color: rgb(55 65 81);
  margin-bottom: 1rem;
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

/* Link section */
.linkSection {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-bottom: 1rem;
}

.viewPrLink {
  color: rgb(156 163 175);
  transition: color 0.15s ease-in-out;
}

.viewPrLink:hover {
  color: rgb(75 85 99);
}

.linkIcon {
  width: 0.75rem;
  height: 0.75rem;
}

/* Button section */
.buttonSection {
  display: flex;
  justify-content: flex-end;
}

.reviewButton {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  background-color: rgb(59 130 246);
  color: white;
  border: none;
  border-radius: 0.375rem;
  font-size: 0.875rem;
  font-weight: 500;
  cursor: pointer;
  transition: background-color 0.15s ease-in-out;
}

.reviewButton:hover {
  background-color: rgb(37 99 235);
}

.reviewButtonDisabled {
  opacity: 0.5;
  cursor: not-allowed;
}

/* Spinner */
.spinner {
  animation: spin 1s linear infinite;
  border-radius: 50%;
  width: 1rem;
  height: 1rem;
  border: 2px solid transparent;
  border-bottom: 2px solid white;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* Dark mode styles */
:global(.dark) .card {
  background-color: rgb(31 41 55);
  border-color: rgb(75 85 99);
}

:global(.dark) .title {
  color: white;
}

:global(.dark) .metadataSection {
  color: rgb(156 163 175);
}

:global(.dark) .branchCode {
  background-color: rgb(31 41 55);
}

:global(.dark) .bodyText {
  color: rgb(209 213 219);
}

:global(.dark) .viewPrLink {
  color: rgb(156 163 175);
}

:global(.dark) .viewPrLink:hover {
  color: rgb(209 213 219);
}
